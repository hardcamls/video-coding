(* This is the interesting marker code. 
   
  Decoding the bits is relatively straight forward, but then they need to be 
  decoded into huffman codewords.
  
  I think many hardware decoders just use the pre-defined code tables, but I 
  am kinda interested in seeing how we might support the more general case.
*)

open Core
open Hardcaml
open Hardcaml_waveterm
open Util
module Dht = Hardcaml_jpeg.Markers.Dht
module Sim = Cyclesim.With_interface (Dht.I) (Dht.O)

let marker_code = Hardcaml_jpeg_model.Marker_code.dht

let find_nth_dht_marker ~n bits =
  let rec find n start_pos =
    let start_pos = find_next_marker_exn ~start_pos ~marker_code bits in
    if n = 0
    then extract_next_marker_exn ~start_pos ~marker_code bits
    else find (n - 1) (start_pos + 1)
  in
  find n 0
;;

let%expect_test "dht" =
  let bits = Test_vld.load_jpeg () in
  let pos = find_next_marker_exn ~start_pos:0 ~marker_code bits in
  let dht = extract_next_marker_exn ~start_pos:(pos + 1) ~marker_code bits in
  print_s [%message (dht : String.Hexdump.t)];
  [%expect
    {|
    (dht
     ("00000000  00 2d 10 00 02 02 01 04  01 04 02 01 04 03 01 01  |.-..............|"
      "00000010  00 00 00 00 01 02 11 21  03 12 31 41 51 04 13 22  |.......!..1AQ..\"|"
      "00000020  61 32 71 81 05 23 42 91  14 33 52 a1 c1           |a2q..#B..3R..|")) |}]
;;

let%expect_test "" =
  let sim =
    Sim.create
      ~config:Cyclesim.Config.trace_all
      (Dht.create (Scope.create ~flatten_design:true ()))
  in
  let waves, sim = Waveform.create sim in
  let inputs = Cyclesim.inputs sim in
  let bits = Test_vld.load_jpeg () in
  let dht =
    let pos = find_next_marker_exn ~start_pos:0 ~marker_code bits in
    extract_next_marker_exn ~start_pos:(pos + 1) ~marker_code bits
  in
  inputs.clocking.clear := Bits.vdd;
  Cyclesim.cycle sim;
  inputs.clocking.clear := Bits.gnd;
  inputs.start := Bits.vdd;
  let step bits =
    inputs.bits := Bits.of_int ~width:16 bits;
    Cyclesim.cycle sim;
    inputs.start := Bits.gnd
  in
  let ( .:[] ) x pos = Char.to_int x.[pos] in
  step (dht.:[1] lsl 8);
  step dht.:[2];
  step (dht.:[2] lsr 4);
  (* Write lengths and values, 1 byte at a tiem *)
  for pos = 3 to String.length dht - 1 do
    step dht.:[pos]
  done;
  for _ = 0 to 17 do
    Cyclesim.cycle sim
  done;
  Waveform.print waves ~start_cycle:0 ~wave_width:1 ~display_width:120 ~display_height:50;
  [%expect
    {|
    ┌Signals───────────┐┌Waves─────────────────────────────────────────────────────────────────────────────────────────────┐
    │clock             ││┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─┐ ┌─│
    │                  ││  └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ └─┘ │
    │clear             ││────┐                                                                                             │
    │                  ││    └─────────────────────────────────────────────────────────────────────────────────────────────│
    │                  ││────┬───┬───┬───┬───┬───────┬───┬───┬───┬───┬───┬───┬───┬───┬───────┬───────────────┬───┬───┬───┬─│
    │bits              ││ 00.│2D.│00.│00.│00.│0002   │00.│00.│00.│00.│00.│00.│00.│00.│0001   │0000           │00.│00.│00.│0│
    │                  ││────┴───┴───┴───┴───┴───────┴───┴───┴───┴───┴───┴───┴───┴───┴───────┴───────────────┴───┴───┴───┴─│
    │start             ││    ┌───┐                                                                                         │
    │                  ││────┘   └─────────────────────────────────────────────────────────────────────────────────────────│
    │done_             ││────┐                                                                                             │
    │                  ││    └─────────────────────────────────────────────────────────────────────────────────────────────│
    │                  ││────────────────┬─────────────────────────────────────────────────────────────────────────────────│
    │hdr$destination_id││ 0              │1                                                                                │
    │                  ││────────────────┴─────────────────────────────────────────────────────────────────────────────────│
    │                  ││────────┬─────────────────────────────────────────────────────────────────────────────────────────│
    │hdr$length        ││ 0000   │002D                                                                                     │
    │                  ││────────┴─────────────────────────────────────────────────────────────────────────────────────────│
    │                  ││──────────────────────────────────────────────────────────────────────────────────────────────────│
    │hdr$table_class   ││ 0                                                                                                │
    │                  ││──────────────────────────────────────────────────────────────────────────────────────────────────│
    │                  ││────────────────────────────────────────────────────────────────────────────────────┬─────────────│
    │length            ││ 00                                                                                 │02           │
    │                  ││────────────────────────────────────────────────────────────────────────────────────┴─────────────│
    │                  ││────────────┬───┬───┬───────┬───┬───┬───┬───┬───┬───┬───┬───┬───────┬───────────────┬───┬───┬─────│
    │length_address    ││ 0          │1  │0  │2      │1  │4  │1  │4  │2  │1  │4  │3  │1      │0              │1  │2  │1    │
    │                  ││────────────┴───┴───┴───────┴───┴───┴───┴───┴───┴───┴───┴───┴───────┴───────────────┴───┴───┴─────│
    │length_write      ││                    ┌───────────────────────────────────────────────────────────────┐             │
    │                  ││────────────────────┘                                                               └─────────────│
    │                  ││────┬───┬───────┬───┬─────────────────────────────────────────────────────────────────────────────│
    │read_bits         ││ 00 │10 │04     │00 │08                                                                           │
    │                  ││────┴───┴───────┴───┴─────────────────────────────────────────────────────────────────────────────│
    │                  ││────────┬───┬───┬───┬───────┬───┬───┬───┬───┬───┬───┬───┬───┬───────┬───────────────┬───┬───┬───┬─│
    │value             ││ 00     │10 │01 │00 │02     │01 │04 │01 │04 │02 │01 │04 │03 │01     │00             │01 │02 │11 │2│
    │                  ││────────┴───┴───┴───┴───────┴───┴───┴───┴───┴───┴───┴───┴───┴───────┴───────────────┴───┴───┴───┴─│
    │                  ││────────────────────────────────────────────────────────────────────────────────────────┬───┬───┬─│
    │value_address     ││ 00                                                                                     │01 │00 │0│
    │                  ││────────────────────────────────────────────────────────────────────────────────────────┴───┴───┴─│
    │                  ││────────────────────────┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┬─────│
    │value_index       ││ 0                      │1  │2  │3  │4  │5  │6  │7  │8  │9  │A  │B  │C  │D  │E  │F  │0      │1    │
    │                  ││────────────────────────┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───────┴─────│
    │value_write       ││                                                                                    ┌─────────────│
    │                  ││────────────────────────────────────────────────────────────────────────────────────┘             │
    │                  ││────────────────────────────────────────────────────────────────────────────────────┬─────────────│
    │LENGTHS           ││ 00                                                                                 │02           │
    │                  ││────────────────────────────────────────────────────────────────────────────────────┴─────────────│
    │gnd               ││                                                                                                  │
    │                  ││──────────────────────────────────────────────────────────────────────────────────────────────────│
    │vdd               ││──────────────────────────────────────────────────────────────────────────────────────────────────│
    └──────────────────┘└──────────────────────────────────────────────────────────────────────────────────────────────────┘ |}]
;;
